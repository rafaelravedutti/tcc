/* Iterate over image on CPU architectures */
fn iterate(img : image_struct, body: fn(int, int) -> ()) -> () {
  let mut i = 0;
  let mut j = 0;

  while(i < img.width) {
    j = 0;

    while(j < img.height) {
      body(i, j);
      j = j + 1;
    }

    i = i + 1;
  }
}

/* Square root function */
fn sqrt(a : f64) -> (f64) {
  cpu_intrinsics.sqrt(a)
}

/* Power function */
fn pow(a : f64, b : f64) -> (f64) {
  cpu_intrinsics.pow(a, b)
}

/* Base-e exponential function */
fn exp(a : f64) -> (f64) {
  cpu_intrinsics.exp(a)
}

/* Absolute function */
fn fabs(a : f64) -> (f64) {
  cpu_intrinsics.fabs(a)
}

/* Arctangent function */
fn atan(x : f64) -> (f64) {
  cpu_intrinsics.atan(x)
}

/* Arctangent of y/x function */
fn atan2(y : f64, x : f64) -> (f64) {
  cpu_intrinsics.atan2(y, x)
}
